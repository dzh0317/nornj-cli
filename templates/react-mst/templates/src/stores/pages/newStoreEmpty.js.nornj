<#if {%!mobx%}>import { types, flow } from 'mobx-state-tree';
</#if>import { observable, toJS, action } from 'mobx';
import * as api from '@/services/pages/{%pageName%}';

<#if {%mobx%}>class {%pageName | capitalize%}Store {
  @observable bool = true;
  @observable strs = '';
  @observable arrs = [];
  @observable modData = null;

  @action
  async getModData(params) {
    const res = await api.getModData(params);
    this.modData = res.data.data;
  }
}<#else>const {%pageName | capitalize%}Store = types
  .model('{%pageName | capitalize%}Store', {
    bool: types.optional(types.boolean, true),
    strs: types.optional(types.string, ''),
    arrs: types.optional(types.array(types.string), []),
  })
  .volatile(self => ({
    modData: null,
  }))
  .views(self => ({}))
  .actions(self => ({
    afterCreate() {},

    getModData: flow(function* (params) {
      const res = yield api.getModData(params);
      self.modData = res.data.data;
    })
  }));</#else></#if>

export default {%pageName | capitalize%}Store;
